import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = os.getenv("TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–ë—ñ–æ", callback_data='bio')],
        [InlineKeyboardButton("–ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ + –≤—Å—ñ —Ñ–æ—Ç–æ", callback_data='portfolio')],
        [InlineKeyboardButton("–í—ñ–¥–≥—É–∫–∏ + –≤—Å—ñ —Ñ–æ—Ç–æ", callback_data='reviews')],
        [InlineKeyboardButton("–©–æ –º–æ–∂–Ω–∞ –∑–∞–º–æ–≤–∏—Ç–∏ —ñ –ø—Ä–∞–π—Å", callback_data='services')],
        [InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç–∏ –º–µ–Ω—ñ", callback_data='chat')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('–ü—Ä–∏–≤—ñ—Ç! –û–±–∏—Ä–∞–π:', reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == 'bio':
        await query.edit_message_text(
            text="–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–∏–∑–∞–π–Ω–µ—Ä Akito. –ó–∞–π–º–∞—é—Å—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è–º —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –ª–æ–≥–æ—Ç–∏–ø—ñ–≤, —Å–∞–π—Ç—ñ–≤ —Ç–∞ —ñ–ª—é—Å—Ç—Ä–∞—Ü—ñ–π."
        )
    elif query.data == 'portfolio':
        media = [InputMediaPhoto(f"https://example.com/portfolio/{i}.jpg") for i in range(1, 11)]
        await query.delete_message()
        await context.bot.send_media_group(chat_id=query.message.chat_id, media=media)
        await context.bot.send_message(
            chat_id=query.message.chat_id,
            text="–ü–æ–≤–Ω–µ –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ —Ç–∞ –±—ñ–ª—å—à–µ —Ñ–æ—Ç–æ —Ç—É—Ç: https://—Ç–≤—ñ–π_–ø—Ä–æ—Ñ—ñ–ª—å"
        )
    elif query.data == 'reviews':
        media = [InputMediaPhoto(f"https://example.com/reviews/{i}.jpg") for i in range(1, 11)]
        await query.delete_message()
        await context.bot.send_media_group(chat_id=query.message.chat_id, media=media)
        await context.bot.send_message(
            chat_id=query.message.chat_id,
            text="–í—Å—ñ –≤—ñ–¥–≥—É–∫–∏ —Ç—É—Ç: https://—Ç–≤—ñ–π_—Å–∞–π—Ç"
        )
    elif query.data == 'services':
        await query.edit_message_text(
            text=(
                "üìå –©–æ –º–æ–∂–Ω–∞ –∑–∞–º–æ–≤–∏—Ç–∏ —ñ –ø—Ä–∞–π—Å:\n"
                "1. –õ–æ–≥–æ—Ç–∏–ø ‚Äî –≤—ñ–¥ 1000‚ÄØ–≥—Ä–Ω\n"
                "2. –§—ñ—Ä–º–æ–≤–∏–π —Å—Ç–∏–ª—å ‚Äî –≤—ñ–¥ 3000‚ÄØ–≥—Ä–Ω\n"
                "3. –î–∏–∑–∞–π–Ω —Å–∞–π—Ç—É ‚Äî –≤—ñ–¥ 5000‚ÄØ–≥—Ä–Ω\n"
                "4. –Ü–ª—é—Å—Ç—Ä–∞—Ü—ñ—ó ‚Äî –≤—ñ–¥ 1500‚ÄØ–≥—Ä–Ω\n"
                "5. –ü–æ–ª—ñ–≥—Ä–∞—Ñ—ñ—è ‚Äî –≤—ñ–¥ 2000‚ÄØ–≥—Ä–Ω\n\n"
                "–ë—ñ–ª—å—à–µ ‚Äî –Ω–∞ —Å–∞–π—Ç—ñ: https://—Ç–≤—ñ–π_—Å–∞–π—Ç"
            )
        )
    elif query.data == 'chat':
        await query.edit_message_text(text="–ù–∞–ø–∏—à–∏ –º–µ–Ω—ñ –≤ Telegram: https://t.me/akito_bio")

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π‚Ä¶")
    app.run_polling()
